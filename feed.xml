<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeff Skelton</title>
    <description>Software Developer
</description>
    <link>https://www.jeffskelton.net/</link>
    <atom:link href="https://www.jeffskelton.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 13 Mar 2017 12:58:05 -0700</pubDate>
    <lastBuildDate>Mon, 13 Mar 2017 12:58:05 -0700</lastBuildDate>
    <generator>Jekyll v3.4.1</generator>
    
      <item>
        <title>Recommended Reading</title>
        <description>&lt;p&gt;&lt;em&gt;Last update: March 2017&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A curated list of books that I have found to be useful in my career.&lt;/p&gt;

&lt;h2 id=&quot;the-pragmatic-programmer&quot;&gt;&lt;a href=&quot;https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X&quot;&gt;The Pragmatic Programmer&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X&quot; class=&quot;image-post-link&quot;&gt;
  &lt;img src=&quot;/images/posts/recommended-reading/pragmatic-programmer-cover.jpg&quot; class=&quot;image-post&quot; alt=&quot;The Pragmatic Programmer&quot; /&gt;
&lt;/a&gt;
My all time favorite computer science book. If I had to choose just one, this would be it. I keep my copy on my desk at my office and often pick it up, flip to a random chapter, and start reading. No matter how many times I have done this, I find something new. There have been times where I have been stuck on a tricky problem and used it to shake my thinking up à la &lt;a href=&quot;https://en.wikipedia.org/wiki/Oblique_Strategies&quot;&gt;Oblique Strategies&lt;/a&gt;. I love that it covers high level concepts and avoids language specific topics. The authors talk about programming as a craft and clearly love their subject.&lt;/p&gt;

&lt;h2 id=&quot;code-complete-2&quot;&gt;&lt;a href=&quot;https://www.amazon.com/dp/0735619670/&quot;&gt;Code Complete 2&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/dp/0735619670/&quot; class=&quot;image-post-link&quot;&gt;
  &lt;img src=&quot;/images/posts/recommended-reading/code-complete-2.jpg&quot; class=&quot;image-post&quot; alt=&quot;Code Complete 2&quot; /&gt;
&lt;/a&gt;
Jeff Atwood likes this book so much that he named his &lt;a href=&quot;https://codinghorror.com&quot;&gt;blog&lt;/a&gt; after it. No other book covers the craft of programming so completely. It’s a thick volume and not one that is easy to read cover to cover. However, the concepts it teaches are timeless so it’s worth doing.&lt;/p&gt;

&lt;h2 id=&quot;javascript-the-good-parts&quot;&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot;&gt;JavaScript: The Good Parts&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&quot; class=&quot;image-post-link&quot;&gt;
  &lt;img src=&quot;/images/posts/recommended-reading/javascript-the-good-parts.jpg&quot; class=&quot;image-post&quot; alt=&quot;JavaScript: The Good Parts&quot; /&gt;
&lt;/a&gt;
JavaScript is, well, &lt;em&gt;weird&lt;/em&gt;. It’s hugely expressive and powerful but only to those that know which features to use and which to avoid. Understanding hoisting or type inference for instance can be mind bending to the uninitiated. ES6 has done a lot to cover up the more troublesome parts of JavaScript but it’s good to be aware of the pitfalls. The author, Douglas Crockford invented the language so this is as good as it gets in explaining it. This book is small and just dense with knowledge. The terse style at times make it a challenging read. I’ve yet to find a better resource for helping navigate all the language’s quirks.&lt;/p&gt;

&lt;h2 id=&quot;programming-phoenix&quot;&gt;&lt;a href=&quot;https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453/&quot;&gt;Programming Phoenix&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Programming-Phoenix-Productive-Reliable-Fast/dp/1680501453/&quot; class=&quot;image-post-link&quot;&gt;
  &lt;img src=&quot;/images/posts/recommended-reading/programming-phoenix.jpg&quot; class=&quot;image-post&quot; alt=&quot;Programming Phoenix&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ok, this one is not for everyone. Only developers interested in working with Elixir and the Phoenix framework should read. I included it because it’s simply the best written technical guide I’ve ever used. The authors provide a real world application to build that teaches the essential concepts of the Phoenix framework. They dumb nothing down. By the time I finished this book I felt I could fully grasp this technology and was able to directly apply it to several client projects I was working on. I rarely find this to be the case with most books of this stripe. I am rooting for Elixir to succeed and become widely adopted. If it does it will be because of efforts like this book that make it easy to onboard new developers.&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Mar 2017 22:42:33 -0700</pubDate>
        <link>https://www.jeffskelton.net/2017/03/12/recommended-reading.html</link>
        <guid isPermaLink="true">https://www.jeffskelton.net/2017/03/12/recommended-reading.html</guid>
        
        
      </item>
    
      <item>
        <title>Hello World</title>
        <description>&lt;p&gt;I love being a software developer. It’s a creative, challenging, and fun profession. When done well, it’s an art form in the same way a beautiful building or finely crafted piece of furniture can be. To a creative, slightly nerdy guy like me, its a great fit. I feel fortunate to have stumbled into it.&lt;/p&gt;

&lt;p&gt;Thats not to say it’s all good times. It’s not “fun” to be debugging a broken deployment at three in the morning or tracking down some tricky logic bug. Its not “challenging” or “creative” to be writing up documentation or sitting in a meeting. However, in between those moments of drudgery, I get to solve problems. That “aha!” moment when I solve a particularly tough one is hard to beat. My brain becomes flooded with dopamine and for a moment I am convinced of my divinity. That is until I notice that my solution has a few flaws. I come crashing back down to earth and get back to work. Problems are the job and I try to remember that. If it was easy, everyone would do it. It’s not and therefore I have a career.&lt;/p&gt;

&lt;p&gt;Over the years I’ve watched things change tremendously. Frameworks come and go, techniques and languages that were once darlings of the industry have been now cast aside as outdated and terrible. If you would have told me when I started that &lt;em&gt;JavaScript&lt;/em&gt; would be the dominant programming language of 2017 I would have wondered what you were smoking. Yet it is, and I can tell you with absolute certainty that this too shall one day pass.&lt;/p&gt;

&lt;p&gt;No matter how good I get or how much I know, there will always be a new technique or technology out there. At times that can be a bit exhausting and it’s a fact that my &lt;a href=&quot;http://www.admarco.net/inbound-marketing-messaging-sales-performance-blog/bid/113040/The-Half-Life-of-a-Learned-Skill-is-5-years-Toward-a-New-Culture-of-Learning&quot;&gt;skills have a half life&lt;/a&gt;. With that in mind, it becomes obvious that only those with an enthusiasm for learning will continue to find work. It’s not what I know right now, its how I find the information I need to solve what I don’t. I’m thankful to all the developers that take the time to write down how they solve a challenge. When I need help with a similar one, it will be there. By documenting our successes we all are elevated.&lt;/p&gt;

&lt;p&gt;Its in that spirit that I have decided to join the club. I have challenged myself to write one post a week. That is a sustainable pace in my opinion. I plan to start by writing about technical challenges that I encounter and how I overcome them. I will also be writing tutorials and documentation on subjects that I feel aren’t adequately covered by whats currently out there in the world. Along the way I hope to discover my own voice and perhaps begin to inject some of that into my writing. Wish me luck.&lt;/p&gt;

</description>
        <pubDate>Tue, 07 Mar 2017 21:57:15 -0800</pubDate>
        <link>https://www.jeffskelton.net/2017/03/07/hello-world.html</link>
        <guid isPermaLink="true">https://www.jeffskelton.net/2017/03/07/hello-world.html</guid>
        
        
      </item>
    
  </channel>
</rss>
